{"version":3,"file":"static/js/227.62c7e944.chunk.js","mappings":"8LACA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAyF,yBAAzF,EAAyH,yB,SCsCzH,EAnCmB,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,OAA+B,IAAvBC,UAAAA,OAAuB,MAAX,KAAW,EAC7CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACGF,IAAa,eAAIG,UAAWC,EAAf,SAA8BJ,KAE5C,eAAIG,UAAWC,EAAf,SACGL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,eAAaL,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMV,GACfE,UAAWC,EAHb,SAKGG,GAASC,KANLF,EADC,QAcnB,C,+HCzBD,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA6F,4B,SCqE7F,EA/DoB,WAAO,IAAD,EACxB,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAA6CD,EAAAA,EAAAA,UAAS,MAAtD,eAAOE,EAAP,KAAyBC,EAAzB,KACA,GAAsCH,EAAAA,EAAAA,WAAS,GAA/C,eAAOI,EAAP,KAAoBC,EAApB,KACA,GAAsCL,EAAAA,EAAAA,UAASF,GAA/C,eAAOQ,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACM,KAAVV,IAEJG,EAAS,MACTE,EAAiB,MACjBE,GAAe,GAEfI,EAAAA,GAAmBX,GAChBY,MAAK,SAAAC,GACJV,EAASU,EAAKC,SACdT,EAAiBQ,EAAKE,eACtBR,GAAe,EAChB,IACAS,MAAMC,QAAQC,KAClB,GAAE,CAAClB,IAeJ,OACE,iCACE,kBAAMmB,SAXW,SAAAC,GACnBA,EAAEC,iBACF,IACMC,EADOF,EAAEG,OACcvB,MAAMwB,MAAMC,cAAcC,OAEvD3B,EAAgB,CAAEC,MAAOsB,GAE1B,EAIiClC,UAAWC,EAAzC,WACE,kBACEsC,KAAK,OACLlC,KAAK,QACLL,UAAWC,EACXmC,MAAOhB,EACPoB,SArBkB,SAAAR,GACxBX,EAAeW,EAAES,cAAcL,MAChC,EAoBOM,YAAY,sBAGd,mBAAQH,KAAK,SAASvC,UAAWC,EAAjC,uBAKDiB,IAAe,SAACyB,EAAA,EAAD,IACf/C,IAAU,SAACgD,EAAA,EAAD,CAAYhD,OAAQA,IAET,IAArBoB,IAA0B,gDAGhC,C,4MClEK6B,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASxB,MAJe,2CAAH,qDAOjByB,EAAc,mCAAG,WAAMtC,GAAN,uFACLoC,IAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BjC,EAD3B,oBADK,cACtBqC,EADsB,yBAIrBA,EAASxB,MAJY,2CAAH,sDAOd0B,EAAY,mCAAG,WAAMhD,GAAN,uFACH6C,IAAAA,IAAA,UAClBF,EADkB,iBACD3C,EADC,oBACa0C,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASxB,MAJU,2CAAH,sDAOZ2B,EAAY,mCAAG,WAAMjD,GAAN,uFACH6C,IAAAA,IAAA,UAClBF,EADkB,iBACD3C,EADC,4BACqB0C,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASxB,KAAK4B,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMnD,GAAN,uFACN6C,IAAAA,IAAA,UAClBF,EADkB,iBACD3C,EADC,4BACqB0C,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASxB,KAAKC,SAJQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MoviesList.module.scss?c2d0","components/MovieList/MoviesList.jsx","webpack://react-homework-template/./src/pages/MovieSearch/MovieSearch.module.scss?3436","pages/MovieSearch/MovieSearch.jsx","services/fetchMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__Isf2-\",\"title\":\"MoviesList_title__NU7hE\",\"item\":\"MoviesList_item__57z78\",\"link\":\"MoviesList_link__azm3V\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.scss';\n\nconst MoviesList = ({ movies, titlePage = null }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <h1 className={styles.title}>{titlePage}</h1>}\n\n      <ul className={styles.list}>\n        {movies.map(({ id, title, name }) => (\n          <li key={id} className={styles.item}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={styles.link}\n            >\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearch_form__vvT5T\",\"input\":\"MovieSearch_input__sV7Po\",\"submit\":\"MovieSearch_submit__o0K78\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../services/fetchMoviesApi';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport Loading from 'components/Loading/Loading';\nimport styles from './MovieSearch.module.scss';\n\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovie] = useState(null);\n  const [totalRezultMovie, setTotalRezMovie] = useState(null);\n  const [showLoading, setShowLoading] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovie(null);\n    setTotalRezMovie(null);\n    setShowLoading(true);\n\n    API.getMoviesQuery(query)\n      .then(data => {\n        setMovie(data.results);\n        setTotalRezMovie(data.total_results);\n        setShowLoading(false);\n      })\n      .catch(console.log);\n  }, [query]);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n    // form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          className={styles.input}\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie name\"\n        />\n\n        <button type=\"submit\" className={styles.submit}>\n          Search\n        </button>\n      </form>\n\n      {showLoading && <Loading />}\n      {movies && <MoviesList movies={movies} />}\n\n      {totalRezultMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst KEY = '1e6151af323d47cf8003a2a2a65ce0eb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movies","titlePage","location","useLocation","className","styles","map","id","title","name","to","state","from","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovie","totalRezultMovie","setTotalRezMovie","showLoading","setShowLoading","inputSearch","setInputSearch","useEffect","API","then","data","results","total_results","catch","console","log","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","onChange","currentTarget","placeholder","Loading","MoviesList","KEY","BASE_URL","getTrandingMovies","axios","response","getMoviesQuery","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}